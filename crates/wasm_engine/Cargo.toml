[package]
name = "pi_wasm_engine"
version = "0.1.0"
authors = ["suncy <suncy@yineng.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib"]

[features]
default = ["pi_js_export"]
release = ["log/release_max_level_warn", "tracing/release_max_level_off"]
trace = ["log/release_max_level_info", "tracing/release_max_level_info", "pi_bevy_log/tracing-chrome", "pi_bevy_render_plugin/trace", "pi_world/trace"]
pi_js_export = []

[dependencies]
pi_hal = {version = "=0.1.40", registry = "yn"}
pi_sdf = {version = "=0.1.20", registry = "yn"}
async-executor = "=1.6.0" #1.7.1bug
pi_export_gui = { path = "../gui", default-features=false, features=["record"] }
# pi_export_astar = { path = "../astar"}
# pi_export_base = { path = "../base", features = ["allow_not_run"]}
pi_export_base = { path = "../base"}
pi_export_assets_mgr = { path = "../assets_mgr" }
pi_spine_export = { path = "../pi_spine_export"}
pi_export_quad_tree = { path = "../quad_tree"}
scene3d_export = { path = "../scene3d" }
pi_web_logger = {git = "http://ser.yinengyun.com:10082/tech/pi_web_logger.git"}
pi_share = "0.4"

# wasm-bindgen = { version = "0.2"}
wasm-bindgen = { version = "=0.2.92" }
bevy_ecs = "0.11"
bevy_app = "0.11"
pi_world = "0.1.20"
# pi_hal = {version = "0.1", registry = "yn"}
# pi_hal = {version = "=0.1.37", registry = "yn"}
pi_winit = {version = "0.27", registry="yn", package="winit"}

log = "0.4"
tracing = "0.1"

# 添加webgl feature
# wgpu1 = { version = "0.19", package = "wgpu", default-features = false, features = ["glsl", "webgl"] }
pi_render = { version = "0.1", registry = "yn", features=["webgl"] }
pi_bevy_winit_window = {version = "0.1", registry = "yn"}
pi_bevy_render_plugin = { version = "0.1", registry = "yn", features=["webgl"]}
pi_bevy_log = {version = "0.1", registry = "yn"}
pi_wgpu =  { version = "0.1", registry = "yn" }
# pi_wgpu =  {version = "0.1", registry = "yn", features = ["single_thread", "use_wgpu"]}


getrandom = { version = "0.2", features = ["js"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
pi-async-rt = {version = "0.1", features = ["serial"]}
uuid = { version = "1", features = ["js"] }
wasm-bindgen = { version = "0.2", features = ["serde-serialize"]}
js-sys = "0.3"
# 固定在0.3.67， 是因为0.3.68版本接口更改， 无法适配wgpu 0.19
web-sys = {version="=0.3.67", features = [
	"HtmlCanvasElement"
]}
wgpu1 = { version = "0.19", package = "wgpu", default-features = false, features = ["glsl", "webgl", "fragile-send-sync-non-atomic-wasm"] }


# [profile.release]
# debug = false
# opt-level = "z"  # 默认情况下，对LLVM的优化通道进行了调整，以提高速度，而不是大小。我们可以通过修改以下
# panic = 'abort'
# # split-debuginfo = '...'  # Platform-specific.
# # strip = "all"
# debug-assertions = false
# overflow-checks = false
# # lto = true
# incremental = false
# codegen-units = 1
# rpath = false

# # `wasm-opt` is on by default in for the release profile, but it can be
# # disabled by setting it to `false`
# [package.metadata.wasm-pack.profile.release]
# # wasm-opt = ['-Oz']
# wasm-opt = false
# debug = false
# debug-assertions = false
# overflow-checks = false
# # strip = true
# opt-level = "z"
# panic = 'abort'
# # lto = true
# [package.metadata.wasm-pack.profile.release.wasm-bindgen]
# debug-js-glue = false
# demangle-name-section = true
# dwarf-debug-info = false
# omit-default-module-path = false

