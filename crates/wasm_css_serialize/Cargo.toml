[package]
name = "pi_css_serialize_wasm"
version = "0.1.0"
authors = ["suncy <suncy@gmail.com>"]
edition = "2021"

[lib]
crate-type = ["cdylib"]

[dependencies]
# pi_ui_render= {git="https://github.com/GaiaWorld/pi_ui_render.git"}
wasm-bindgen = { version = "=0.2.83", features = ["serde-serialize"] }
postcard = {version = "1.0", features = ["use-std"]}
log = "0.4"
getrandom = {version = "0.2.7", features=["js"]}
pi_hash = "0.1"
cssparser = "0.29"
serde = { version = "1.0", features = ["derive"]}
serde_json = "1.0"
pi_null = "0.1"
smallvec={version = "1.8", features = ["serde"]}

pi_web_logger={git="http://ser.yinengyun.com:10082/tech/pi_web_logger.git"}
pi_style = { git = "https://github.com/GaiaWorld/pi_style.git" }
pi_ui_render = { git = "https://github.com/GaiaWorld/pi_ui_render.git", branch = "bevy" }
wgpu = { version = "0.15", default-features = false, features = ["glsl", "webgl"] }
pi_render = { git = "https://github.com/GaiaWorld/pi_render.git", branch = "bevy_shader", features = ["webgl"] }
pi_bevy_render_plugin = { git = "https://github.com/GaiaWorld/pi_render_bevy.git", features=["webgl"]}
pi-async-rt = {version = "0.1", features = ["serial"]}


[profile.release]
# debug= true
lto = true #这为LLVM提供了更多内联和修剪功能的机会。它不仅使.wasm尺寸更小，而且在运行时也更快！缺点是编译将花费更长的时间
opt-level = 's'  # 默认情况下，对LLVM的优化通道进行了调整，以提高速度，而不是大小。我们可以通过修改以下
# opt-level = "z" # 了更积极地优化尺寸，以进一步的潜在速度成本
# 请注意，令人惊讶的是，opt-level = "s"有时二进制文件的大小可能小于opt-level = "z"。总是测量！
panic = 'abort'
codegen-units = 1
# dwarf-debug-info = true

[profile.dev]
dwarf-debug-info = true

[dev-dependencies]
env_logger = "0.9"